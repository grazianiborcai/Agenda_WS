<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

        
    <!-- Debugging   
	<security:debug />  --> 
	
	
	
	<!-- Free of authentication --> 
	<http pattern="/**/Signup/**"   					security="none"/>
	<http pattern="/**/Signin/**" 						security="none"/>
	<http pattern="/**/Test/**"     					security="none"/>
	<http pattern="/**/Webhook/**"     					security="none"/>
	<http pattern="/**/Payment/permissionCodeMoip"		security="none"/>
	<http pattern="/**/MoipApp/**"  					security="none"/>	<!-- TODO: Somente para teste -->
	
	
	
	<!-- BASIC authentication --> 
    <security:http create-session="stateless" pattern="/**/Home/**">
    	 <security:intercept-url pattern="/**" access="isAuthenticated()" />
        <security:http-basic />
        <csrf disabled="true"/>
        <custom-filter before="BASIC_AUTH_FILTER" ref="authFilterPwrd" />
    </security:http>
    


	<!-- JWT Token authentication --> 
    <security:http create-session="stateless" pattern="/**">    
        <security:intercept-url pattern="/**/Owner/**"       					access="hasAuthority('OWNER_WRITE')" 				/>
    	<security:intercept-url pattern="/**/Store/updateStoreWorkTime" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/insertStoreWorkTime" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/deleteStoreWorkTime" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreWorkTime" 		access="hasAuthority('STORE_READ')" 				/> 
    	<security:intercept-url pattern="/**/Store/updateStoreLeaveDate" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/insertStoreLeaveDate" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/deleteStoreLeaveDate" 		access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreLeaveDate" 		access="hasAuthority('STORE_READ')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreList" 			access="isAuthenticated()" 							/>   
        <security:intercept-url pattern="/**/Store/insertPayPartner" 			access="hasAuthority('STORE_UPDATE')" 				/>	<!-- TODO: Rever essa role -->
        <security:intercept-url pattern="/**/Store/updatePayPartner" 			access="hasAuthority('STORE_UPDATE')" 				/>	<!-- TODO: Rever essa role -->
        <security:intercept-url pattern="/**/Store/deletePayPartner" 			access="hasAuthority('STORE_UPDATE')" 				/>	<!-- TODO: Rever essa role -->
        <security:intercept-url pattern="/**/Store/selectPayPartner" 			access="hasAuthority('STORE_READ')" 				/> 	<!-- TODO: Rever essa role -->  
        <security:intercept-url pattern="/**/Store/insert**" 					access="hasAuthority('STORE_INSERT')" 				/>
        <security:intercept-url pattern="/**/Store/update**" 					access="hasAuthority('STORE_UPDATE')" 				/>
        <security:intercept-url pattern="/**/Store/delete**" 					access="hasAuthority('STORE_DELETE')" 				/>
        <security:intercept-url pattern="/**/Store/select**" 					access="hasAuthority('STORE_READ')" 				/>      
        <security:intercept-url pattern="/**/Material/insertMatmov" 			access="hasAuthority('MAT_MOV_WRITE')"				/>
        <security:intercept-url pattern="/**/Material/selectMatmov" 			access="hasAuthority('MAT_MOV_READ')"				/>        
        <security:intercept-url pattern="/**/Material/deleteMatStore" 			access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/updateMatStore" 			access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/insertMatStore" 			access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/selectMatStore" 			access="isAuthenticated()"							/>
        <security:intercept-url pattern="/**/Material/insert**" 				access="hasAuthority('MATERIAL_WRITE')"				/>
        <security:intercept-url pattern="/**/Material/update**" 				access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/Material/upsert**" 				access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/Material/delete**" 				access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/Material/select**" 				access="isAuthenticated()" 							/>        
        <security:intercept-url pattern="/**/Employee/insertEmployee"			access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/updateEmployee"			access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/deleteEmployee"			access="hasAuthority('EMPLOYEE_WRITE')"				/>        
        <security:intercept-url pattern="/**/Employee/insertPosition"			access="hasAuthority('EMPLOYEE_POSITION_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/updatePosition"			access="hasAuthority('EMPLOYEE_POSITION_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/deletePosition"			access="hasAuthority('EMPLOYEE_POSITION_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/selectPosition"			access="hasAuthority('EMPLOYEE_POSITION_READ')" 	/>          
        <security:intercept-url pattern="/**/Employee/insertLeaveDate"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/updateLeaveDate"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/deleteLeaveDate"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/selectLeaveDate"			access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>  
        <security:intercept-url pattern="/**/Employee/insertWorkTime"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/updateWorkTime"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/deleteWorkTime"			access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/selectWorkTime"			access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/selectWorkTimeConflict"	access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/insertMaterial"			access="hasAuthority('EMPLOYEE_MATERIAL_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/deleteMaterial"			access="hasAuthority('EMPLOYEE_MATERIAL_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/selectMaterial"			access="hasAuthority('EMPLOYEE_MATERIAL_READ')" 	/>       
        <security:intercept-url pattern="/**/Employee/selectList"				access="isAuthenticated()" 							/>             
        <security:intercept-url pattern="/**/Employee/insert**" 				access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/update**" 				access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/Employee/delete**" 				access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/Employee/select**" 				access="hasAuthority('EMPLOYEE_READ')" 				/>         
        <security:intercept-url pattern="/**/Customer/insert**" 				access="hasAuthority('CUSTOMER_WRITE')"				/>
        <security:intercept-url pattern="/**/Customer/update**" 				access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/Customer/delete**" 				access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/Customer/select**" 				access="hasAuthority('CUSTOMER_READ')" 				/>
        <security:intercept-url pattern="/**/MasterData/**"						access="isAuthenticated()" 							/>  
        <security:intercept-url pattern="/**/PlanningTime**"					access="isAuthenticated()" 							/>  
        <security:intercept-url pattern="/**/Cart/**"							access="isAuthenticated()" 							/>  
        <security:intercept-url pattern="/**/User/**"							access="isAuthenticated()" 							/>  
        <security:intercept-url pattern="/**/Order/**"							access="isAuthenticated()" 							/> 
        <security:intercept-url pattern="/**/Payment/grantMoip"					access="hasAuthority('STORE_PAY_WRITE')" 			/>    
        <security:intercept-url pattern="/**/Payment/payOrder"					access="isAuthenticated()" 							/>     
        <security:intercept-url pattern="/**/Payment/refundOrder"				access="isAuthenticated()" 							/>   <!-- TODO: Rever Role -->
        <security:intercept-url pattern="/**/Payment/selectPayStatus"			access="isAuthenticated()" 							/>     
        <security:intercept-url pattern="/**/Payment/insertCreditCard"			access="isAuthenticated()" 							/>    
        <security:intercept-url pattern="/**/Schedule/insertScheduleLine"		access="hasAuthority('SCHEDULE_INSERT')" 			/>    
        <security:intercept-url pattern="/**/Schedule/updateScheduleLine"		access="hasAuthority('SCHEDULE_UPDATE')" 			/>  
        <security:intercept-url pattern="/**"                					access="isAuthenticated()" 							/>	<!-- TODO: Remover? -->
        <security:http-basic />
        <csrf disabled="true"/>
        <custom-filter after="SECURITY_CONTEXT_FILTER" ref="tokenParamFilter" />
        <custom-filter before="BASIC_AUTH_FILTER" ref="authFilterJwtoken" />
    </security:http> 
    
    
    <!-- TODO: habilitar CSRF protection 
    "isAuthenticated()"		"hasRole('ROLE_USER')"	
    FORM_LOGIN_FILTER		BASIC_AUTH_FILTER	
    hasAuthority('MBM_02') or hasAuthority('MBM_03')-->
    
    
    
    <!-- Filter Bean -->
	<beans:bean id="authFilterPwrd"
		class="br.com.gda.servlet.filter.authentication.AuthFilterPwrd">
		<beans:constructor-arg ref="authenticationManagerPwrd"/>
		<beans:constructor-arg ref="authEntryPointPwrd"/>
	</beans:bean> 
	
	<beans:bean id="authEntryPointPwrd" class="br.com.gda.servlet.filter.authentication.AuthEntryPointPwrd"/>
	
	
	<beans:bean id="authFilterJwtoken"
		class="br.com.gda.servlet.filter.authentication.AuthFilterJwtoken">
		<beans:constructor-arg ref="authenticationManagerJwtoken"/>
	</beans:bean> 
	
	
	<beans:bean id="tokenParamFilter"
		class="br.com.gda.servlet.filter.header.TokenParamFilter">
	</beans:bean> 


	<!-- Authentication Provider - Basic -->
    <security:authentication-manager alias="authenticationManagerPwrd" id="authenticationManagerPwrd">
        <authentication-provider ref="authProviderPwrd" >
        </authentication-provider>
    </security:authentication-manager>    
    
    <beans:bean id="authProviderPwrd" class="br.com.gda.servlet.filter.authentication.AuthProviderPwrd"/>    
    
    
	<!-- Authentication Provider - Token -->
    <security:authentication-manager alias="authenticationManagerJwtoken" id="authenticationManagerJwtoken">
        <authentication-provider ref="authProviderJwtoken" >
        </authentication-provider>
    </security:authentication-manager>     
    
    <beans:bean id="authProviderJwtoken" class="br.com.gda.servlet.filter.authentication.AuthProviderJwtoken"/>
</beans:beans>