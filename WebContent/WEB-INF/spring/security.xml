<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

        
    <!-- Debugging   
	<security:debug />  --> 
	
	
	
	<!-- Free of authentication -->
  	<security:http create-session="stateless" pattern="/Signup/user" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
  	<security:http create-session="stateless" pattern="/Signup/owner" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
	
	<security:http create-session="stateless" pattern="/**/Owner/listOwner" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
	<security:http create-session="stateless" pattern="**/Webhook/**" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
    <security:http create-session="stateless" pattern="/**/Payment/permissionCodeMoip" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
    <security:http create-session="stateless" pattern="/**/Prospect/insertProspectStore" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
    <security:http create-session="stateless" pattern="/**/Prospect/insertOtpProspectStore" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
    <security:http create-session="stateless" pattern="/**/insertOtpUserPassword" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
    
    <security:http create-session="stateless" pattern="/**/updateUserPassword" use-expressions="true">
    	<security:intercept-url pattern="/**" access="hasAuthority('ROLE_ANONYMOUS')" />
    	<security:anonymous enabled="true"/>   
    	<security:http-basic />
    	<csrf disabled="true"/>
    	<cors configuration-source-ref="corsSource"/>
    	<custom-filter after="ANONYMOUS_FILTER" ref="authFilterAnonymous" />
    </security:http>
	
	
	
	<!-- Teste -->
	<http pattern="/**/MoipApp/**" security="none"/>	<!-- TODO: Somente para teste -->
	


	<!-- Localhost hasIpAddress('127.0.0.1') -->
	<security:http create-session="stateless" pattern="/**/Bot/**" use-expressions="true">
    	<security:intercept-url pattern="/**/Bot/upsertStatsOwnerL2m" 		access="permitAll" />
    	<security:intercept-url pattern="/**/Bot/upsertStatsStoreL2m" 		access="permitAll" />
    	<security:intercept-url pattern="/**/Bot/upsertStatsCustomerL2m" 	access="permitAll" />
        <security:http-basic />
        <csrf disabled="true"/>
    	<custom-filter before="BASIC_AUTH_FILTER" ref="authFilterLocalhost" />
    </security:http>
	
	
	
	<!-- BASIC authentication -->
    <security:http create-session="stateless" pattern="/**/Home/**">
    	<security:intercept-url pattern="/**" access="isAuthenticated()" />
        <security:http-basic />
        <csrf disabled="true"/>
        <cors configuration-source-ref="corsSource"/>
        <custom-filter before="BASIC_AUTH_FILTER" ref="authFilterPwrd" />
    </security:http>
    


	<!-- JWT Token authentication --> 
    <security:http create-session="stateless" pattern="/**">
        <security:intercept-url pattern="/**/Owner/selectOwner"       				access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Owner/updateOwner"       				access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Owner/deleteOwner"       				access="denyAll" 									/>
    	<security:intercept-url pattern="/**/Store/updateStoreWorkTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/insertStoreWorkTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/deleteStoreWorkTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreWorkTime" 			access="hasAuthority('STORE_READ')" 				/> 
    	<security:intercept-url pattern="/**/Store/searchStoreWorkTime" 			access="hasAuthority('STORE_READ')" 				/>    	
   		<security:intercept-url pattern="/**/Store/updateStoreLunchTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/insertStoreLunchTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/deleteStoreLunchTime" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreLunchTime" 			access="hasAuthority('STORE_READ')" 				/> 
    	<security:intercept-url pattern="/**/Store/searchStoreLunchTime" 			access="hasAuthority('STORE_READ')" 				/>    	
    	<security:intercept-url pattern="/**/Store/updateStoreLeaveDate" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/insertStoreLeaveDate" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/deleteStoreLeaveDate" 			access="hasAuthority('STORE_UPDATE')" 				/>
    	<security:intercept-url pattern="/**/Store/selectStoreLeaveDate" 			access="hasAuthority('STORE_READ')" 				/>
    	<security:intercept-url pattern="/**/Store/searchStoreLeaveDate" 			access="hasAuthority('STORE_READ')" 				/>
    	<security:intercept-url pattern="/**/Store/searchStore" 					access="isAuthenticated()" 							/>    	   	
        <security:intercept-url pattern="/**/Store/selectPayPartnerList"			access="hasAuthority('STORE_PAY_READ')"				/> 	  
        <security:intercept-url pattern="/**/Store/grantMoip"						access="hasAuthority('STORE_PAY_WRITE')" 			/>    
        <security:intercept-url pattern="/**/Store/insertStore" 					access="hasAuthority('STORE_INSERT')" 				/>
        <security:intercept-url pattern="/**/Store/updateStore" 					access="hasAuthority('STORE_UPDATE')" 				/>
        <security:intercept-url pattern="/**/Store/deleteStore" 					access="hasAuthority('STORE_DELETE')" 				/>
        <security:intercept-url pattern="/**/Store/selectStore" 					access="hasAuthority('STORE_READ')" 				/>   
        <security:intercept-url pattern="/**/Store/selectStoreNearby" 				access="isAuthenticated()" 							/>   
        <security:intercept-url pattern="/**/Store/selectStoreCatalogue" 			access="isAuthenticated()" 							/>  
        <security:intercept-url pattern="/**/Store/insertStoreFavorite" 			access="isAuthenticated()" 							/> 
        <security:intercept-url pattern="/**/Store/deleteStoreFavorite" 			access="isAuthenticated()" 							/> 
        <security:intercept-url pattern="/**/Store/searchStoreFavorite" 			access="isAuthenticated()" 							/>        
        <security:intercept-url pattern="/**/Store/activateStore" 					access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Store/inactivateStore" 				access="hasAuthority('OWNER_WRITE')" 				/>        
        <security:intercept-url pattern="/**/Material/insertMatmov" 				access="hasAuthority('MAT_MOV_WRITE')"				/>
        <security:intercept-url pattern="/**/Material/selectMatmov" 				access="hasAuthority('MAT_MOV_READ')"				/>     
        <security:intercept-url pattern="/**/Material/searchMatmov" 				access="hasAuthority('MAT_MOV_READ')"				/>     
        <security:intercept-url pattern="/**/Material/deleteMatStore" 				access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/updateMatStore" 				access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/insertMatStore" 				access="hasAuthority('MAT_STORE_WRITE')"			/>
        <security:intercept-url pattern="/**/Material/selectMatStore" 				access="isAuthenticated()"							/>	<!-- TODO: rever -->
        <security:intercept-url pattern="/**/Material/searchMatStore" 				access="isAuthenticated()"							/>	<!-- TODO: rever -->        
        <security:intercept-url pattern="/**/Material/activateMaterial" 			access="hasAuthority('MATERIAL_WRITE')"				/>
        <security:intercept-url pattern="/**/Material/inactivateMaterial" 			access="hasAuthority('MATERIAL_WRITE')"				/>        
        <security:intercept-url pattern="/**/Material/insertMaterial" 				access="hasAuthority('MATERIAL_WRITE')"				/>	<!-- TODO: rever -->
        <security:intercept-url pattern="/**/Material/updateMaterial" 				access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/Material/deleteMaterial" 				access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/Material/selectMaterial" 				access="isAuthenticated()" 							/>  <!-- TODO: rever --> 
        <security:intercept-url pattern="/**/Material/searchMaterial" 				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Material/selectMaterialCatalogue" 		access="isAuthenticated()" 							/>        
        <security:intercept-url pattern="/**/Employee/activateEmployee"				access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/inactivateEmployee"			access="hasAuthority('EMPLOYEE_WRITE')"				/>        
        <security:intercept-url pattern="/**/Employee/selectEmployee" 				access="hasAuthority('EMPLOYEE_READ')" 				/>
        <security:intercept-url pattern="/**/Employee/searchEmployee" 				access="hasAuthority('EMPLOYEE_READ')" 				/>
        <security:intercept-url pattern="/**/Employee/insertEmployee"				access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/updateEmployee"				access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/deleteEmployee"				access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/insertPosition"				access="hasAuthority('EMPLOYEE_POSITION_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/searchPosition"				access="hasAuthority('EMPLOYEE_POSITION_READ')"		/>
        <security:intercept-url pattern="/**/Employee/deletePosition"				access="hasAuthority('EMPLOYEE_POSITION_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/selectPosition"				access="hasAuthority('EMPLOYEE_POSITION_READ')" 	/>  
        <security:intercept-url pattern="/**/Employee/insertLeaveDate"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/updateLeaveDate"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/deleteLeaveDate"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/selectLeaveDate"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>  
        <security:intercept-url pattern="/**/Employee/searchLeaveDate"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/insertWorkTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/updateWorkTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/deleteWorkTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/selectWorkTime"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/searchWorkTime"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>        
        <security:intercept-url pattern="/**/Employee/insertLunchTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/updateLunchTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/deleteLunchTime"				access="hasAuthority('EMPLOYEE_TIME_WRITE')"		/>
        <security:intercept-url pattern="/**/Employee/selectLunchTime"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/searchLunchTime"				access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>        
        <security:intercept-url pattern="/**/Employee/selectWorkTimeOutlier"		access="hasAuthority('EMPLOYEE_TIME_READ')" 		/>
        <security:intercept-url pattern="/**/Employee/insertMaterial"				access="hasAuthority('EMPLOYEE_MATERIAL_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/deleteMaterial"				access="hasAuthority('EMPLOYEE_MATERIAL_WRITE')"	/>
        <security:intercept-url pattern="/**/Employee/selectMaterial"				access="hasAuthority('EMPLOYEE_MATERIAL_READ')" 	/>
        <security:intercept-url pattern="/**/Employee/searchMaterial"				access="hasAuthority('EMPLOYEE_MATERIAL_READ')" 	/>
        <security:intercept-url pattern="/**/Employee/insert**" 					access="hasAuthority('EMPLOYEE_WRITE')"				/>
        <security:intercept-url pattern="/**/Employee/update**" 					access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/Employee/delete**" 					access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/Employee/select**" 					access="hasAuthority('EMPLOYEE_READ')" 				/>      <!-- TODO: rever -->    
        <security:intercept-url pattern="/**/Customer/insert**" 					access="hasAuthority('CUSTOMER_WRITE')"				/>
        <security:intercept-url pattern="/**/Customer/update**" 					access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/Customer/delete**" 					access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/Customer/select**" 					access="hasAuthority('CUSTOMER_READ')" 				/>
        <security:intercept-url pattern="/**/Customer/search**" 					access="hasAuthority('CUSTOMER_READ')" 				/>
        <security:intercept-url pattern="/**/MasterData/activateMatGroupOwner"		access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/MasterData/inactivateMatGroupOwner"	access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/MasterData/upsertMatGroupOwner"		access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/MasterData/select**"					access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/PlanningTime/selectPlanningTime"		access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Cart/**"								access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/User/**"								access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Order/searchOrder"						access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Order/searchHistoryOrder"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Order/**"								access="isAuthenticated()" 							/>   <!-- TODO: rever -->
        <security:intercept-url pattern="/**/Payment/payOrder"						access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/refundOrder"					access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Payment/refundOrderItem"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/refreshStatus"					access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/insertCreditCard"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/deleteCreditCard"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/selectCreditCard"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Payment/searchCreditCard"				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/Schedule/insertScheduleLine"			access="hasAuthority('SCHEDULE_INSERT')" 			/>
        <security:intercept-url pattern="/**/Schedule/updateScheduleLine"			access="hasAuthority('SCHEDULE_UPDATE')" 			/>
        <security:intercept-url pattern="/**/Schedule/moveScheduleLine"				access="hasAuthority('SCHEDULE_MOVE')" 				/>
        <security:intercept-url pattern="/**/Schedule/cancelScheduleLine"			access="hasAuthority('SCHEDULE_CANCEL')" 			/>
        <security:intercept-url pattern="/**/Schedule/searchScheduleLine"			access="hasAuthority('SCHEDULE_READ')" 				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleLine"			access="hasAuthority('SCHEDULE_READ')" 				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleYear"			access="hasAuthority('SCHEDULE_READ')"				/> 
        <security:intercept-url pattern="/**/Schedule/selectScheduleYearNext"		access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleYearNow"		access="hasAuthority('SCHEDULE_READ')"				/> 
        <security:intercept-url pattern="/**/Schedule/selectScheduleYearPrevious"	access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleMonth"			access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleMonthNext"		access="hasAuthority('SCHEDULE_READ')"				/> 
        <security:intercept-url pattern="/**/Schedule/selectScheduleMonthNow"		access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleMonthPrevious"	access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleWeek"			access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleWeekNext"		access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleWeekNow"		access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleWeekPrevious"	access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleDay"			access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleDayNext"		access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleDayNow"			access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleDayPrevious"	access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/Schedule/selectScheduleRange"			access="hasAuthority('SCHEDULE_READ')"				/>
        <security:intercept-url pattern="/**/File/insertFileImgGroup"				access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/File/insertFileImgOwner"				access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/File/deleteFileImgOwner"				access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/File/insertFileImgStore" 				access="hasAuthority('STORE_UPDATE')" 				/>
        <security:intercept-url pattern="/**/File/updateFileImgStore" 				access="hasAuthority('STORE_UPDATE')" 				/>
        <security:intercept-url pattern="/**/File/deleteFileImgStore" 				access="hasAuthority('STORE_UPDATE')" 				/>
        <security:intercept-url pattern="/**/File/insertFileImgEmployee" 			access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/deleteFileImgEmployee" 			access="hasAuthority('EMPLOYEE_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/insertFileImgMaterial" 			access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/updateFileImgMaterial" 			access="hasAuthority('MATERIAL_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/deleteFileImgMaterial" 			access="hasAuthority('MATERIAL_WRITE')" 			/>  
        <security:intercept-url pattern="/**/File/insertFileImgCustomer" 			access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/deleteFileImgCustomer" 			access="hasAuthority('CUSTOMER_WRITE')" 			/>
        <security:intercept-url pattern="/**/File/insertFileImgUser" 				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/File/deleteFileImgUser" 				access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/RefundPolicy/deleteRefundPolicyOwner" 	access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/RefundPolicy/selectRefundPolicyOwner" 	access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/RefundPolicy/upsertRefundPolicyOwner" 	access="hasAuthority('OWNER_WRITE')" 				/>      
        <security:intercept-url pattern="/**/RefundPolicy/deleteRefundPolicyStore" 	access="hasAuthority('STORE_WRITE')" 				/>
        <security:intercept-url pattern="/**/RefundPolicy/searchRefundPolicyStore" 	access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/RefundPolicy/selectRefundPolicyStore" 	access="isAuthenticated()" 							/>
        <security:intercept-url pattern="/**/RefundPolicy/upsertRefundPolicyStore" 	access="hasAuthority('STORE_WRITE')" 				/>
        <security:intercept-url pattern="/**/Prospect/updateProspectStore" 			access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Prospect/deleteProspectStore" 			access="hasAuthority('OWNER_WRITE')" 				/>
        <security:intercept-url pattern="/**/Prospect/searchProspectStore" 			access="hasAuthority('OWNER_READ')" 				/>
        <security:intercept-url pattern="/**/Prospect/selectProspectStore" 			access="hasAuthority('OWNER_READ')" 				/>
        <security:intercept-url pattern="/**/Calendar/selectCalendarCatalogue" 		access="isAuthenticated()" 							/>
 		<security:intercept-url pattern="/**/Pet/insertPet" 						access="hasAuthority('PET_WRITE')"					/>
        <security:intercept-url pattern="/**/Pet/updatePet" 						access="hasAuthority('PET_WRITE')" 					/>
        <security:intercept-url pattern="/**/Pet/deletePet" 						access="hasAuthority('PET_WRITE')" 					/>
        <security:intercept-url pattern="/**/Pet/selectPet" 						access="hasAuthority('PET_READ')"					/>
        <security:intercept-url pattern="/**/Pet/searchPet" 						access="hasAuthority('PET_READ')" 					/>
        <security:intercept-url pattern="/**/Stats/selectOwnerDashboard" 			access="hasAuthority('OWNER_READ')" 				/>
        <security:intercept-url pattern="/**/Stats/selectStoreDashboard" 			access="hasAuthority('OWNER_READ')" 				/>
        <security:intercept-url pattern="/**" 										access="denyAll" 									/>
        <security:http-basic />
        <csrf disabled="true"/>
 
        <cors configuration-source-ref="corsSource"/>
        <custom-filter after="SECURITY_CONTEXT_FILTER" ref="tokenParamFilter" />
        <custom-filter before="BASIC_AUTH_FILTER" ref="authFilterJwtoken" />
    </security:http>
    
    
    <!-- TODO: habilitar CSRF protection 
    "isAuthenticated()"		"hasRole('ROLE_USER')"	
    FORM_LOGIN_FILTER		BASIC_AUTH_FILTER	
    hasAuthority('MBM_02') or hasAuthority('MBM_03')-->
    
    
    
    <!-- Filter Bean -->
	<beans:bean id="authFilterPwrd"
		class="br.com.mind5.servlet.filter.authentication.AuthFilterPwrd">
		<beans:constructor-arg ref="authenticationManagerPwrd"/>
		<beans:constructor-arg ref="authEntryPointPwrd"/>
	</beans:bean> 
	
	<beans:bean id="authEntryPointPwrd" class="br.com.mind5.servlet.filter.authentication.AuthEntryPointPwrd"/>
	
	
	<beans:bean id="authFilterJwtoken"
		class="br.com.mind5.servlet.filter.authentication.AuthFilterJwtoken">
		<beans:constructor-arg ref="authenticationManagerJwtoken"/>
	</beans:bean> 
	
	
	<beans:bean id="tokenParamFilter"
		class="br.com.mind5.servlet.filter.header.TokenParamFilter">
	</beans:bean>
	
	
	<beans:bean id="authFilterLocalhost"
		class="br.com.mind5.servlet.filter.authentication.AuthFilterLocalhost">
		<beans:constructor-arg ref="authenticationManagerLocalhost"/>
	</beans:bean>
	
 
	<beans:bean id="authFilterAnonymous"
		class="br.com.mind5.servlet.filter.authentication.AuthFilterAnonymous">
		<beans:constructor-arg ref="authenticationManagerAnonymous"/>
	</beans:bean>

	
	<beans:bean id="corsSource" 
		class="br.com.mind5.servlet.filter.cors.CorsConfigurationSource">
	</beans:bean>



	<!-- Authentication Provider - Basic -->
    <security:authentication-manager alias="authenticationManagerPwrd" id="authenticationManagerPwrd">
        <authentication-provider ref="authProviderPwrd" >
        </authentication-provider>
    </security:authentication-manager>    
    
    <beans:bean id="authProviderPwrd" class="br.com.mind5.servlet.filter.authentication.AuthProviderPwrd"/>    
    
    
    
	<!-- Authentication Provider - Token -->
    <security:authentication-manager alias="authenticationManagerJwtoken" id="authenticationManagerJwtoken">
        <authentication-provider ref="authProviderJwtoken" >
        </authentication-provider>
    </security:authentication-manager>     
    
    <beans:bean id="authProviderJwtoken" class="br.com.mind5.servlet.filter.authentication.AuthProviderJwtoken"/>
    
    
    
	<!-- Authentication Provider - Localhost -->
    <security:authentication-manager alias="authenticationManagerLocalhost" id="authenticationManagerLocalhost">
        <authentication-provider ref="authProviderLocalhost" >
        </authentication-provider>
    </security:authentication-manager>     
    
    <beans:bean id="authProviderLocalhost" class="br.com.mind5.servlet.filter.authentication.AuthProviderLocalhost"/>
    
    
    
	<!-- Authentication Provider - Free of authentication -->
    <security:authentication-manager alias="authenticationManagerAnonymous" id="authenticationManagerAnonymous">
        <authentication-provider ref="authProviderAnonymous" >
        </authentication-provider>
    </security:authentication-manager>     
    
    <beans:bean id="authProviderAnonymous" class="br.com.mind5.servlet.filter.authentication.AuthProviderAnonymous"/>
</beans:beans>